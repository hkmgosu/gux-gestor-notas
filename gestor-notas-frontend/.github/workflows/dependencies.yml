name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Check for Updates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Check for outdated packages
        run: |
          echo "## ðŸ“¦ Dependency Update Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Current Status" >> $GITHUB_STEP_SUMMARY
          npm outdated --long --json | jq -r '
            to_entries[] | 
            "| \(.key) | \(.value.current) | \(.value.wanted) | \(.value.latest) |"
          ' > outdated.txt

          if [ -s outdated.txt ]; then
            echo "| Package | Current | Wanted | Latest |" >> $GITHUB_STEP_SUMMARY
            echo "|---------|---------|---------|--------|" >> $GITHUB_STEP_SUMMARY
            cat outdated.txt >> $GITHUB_STEP_SUMMARY
          else
            echo "âœ… All dependencies are up to date!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Security audit
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ”’ Security Audit" >> $GITHUB_STEP_SUMMARY
          npm audit --audit-level=low --json | jq -r '
            .vulnerabilities | to_entries[] | 
            select(.value.severity != "info") |
            "| \(.key) | \(.value.severity) | \(.value.via[0].title // "N/A") |"
          ' > audit.txt

          if [ -s audit.txt ]; then
            echo "| Package | Severity | Issue |" >> $GITHUB_STEP_SUMMARY
            echo "|---------|----------|-------|" >> $GITHUB_STEP_SUMMARY
            cat audit.txt >> $GITHUB_STEP_SUMMARY
          else
            echo "âœ… No security vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create issue for updates
        if: hashFiles('outdated.txt') != ''
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            if (fs.existsSync('outdated.txt') && fs.statSync('outdated.txt').size > 0) {
              const outdated = fs.readFileSync('outdated.txt', 'utf8');
              
              const issueBody = `## ðŸ“¦ Weekly Dependency Update Report
              
              This is an automated report of outdated dependencies in the project.

              ### Outdated Packages

              | Package | Current | Wanted | Latest |
              |---------|---------|---------|--------|
              ${outdated}

              ### Recommended Actions

              1. Review the changes for each package
              2. Test updates in a development environment
              3. Update packages incrementally
              4. Run the full test suite after updates

              ### Commands to Update

              \`\`\`bash
              # Update to wanted versions (minor/patch updates)
              npm update

              # Check for major version updates
              npm outdated

              # Update specific packages
              npm install package@latest
              \`\`\`

              *This issue was automatically generated by the Dependency Updates workflow.*`;

              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `ðŸ“¦ Weekly Dependency Updates - ${new Date().toISOString().split('T')[0]}`,
                body: issueBody,
                labels: ['dependencies', 'maintenance']
              });
            }
